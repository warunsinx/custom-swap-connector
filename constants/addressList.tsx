// main-net
// export const CONTRACT_ADDRESS = {
//   Multicall: "0xcc515Aa7eE9Be4491c98DE68ee2147F0A063759D",
//   SwapFactory: "0x6e906dc4749642a456907decb323a0065dc6f26e",
//   SwapRouter: "0xAb30a29168D792c5e6a54E4bcF1Aec926a3b20FA",
//   YES: "0x8debbb77e8a17cffCfC0C7F1f40308886edD3f9f",
//   KKUB: "0x67ebd850304c70d983b2d1b93ea79c7cd6c3f6b5",
//   KUSDT: "0x7d984C24d2499D840eB3b7016077164e15E5faA6",
//   KUSDC: "0x77071ad51ca93fc90e77BCdECE5aa6F1B40fcb21",
//   "KUSDC/KUSDT": "0x77793814f9C49828F14058268aEb391c7ea1EB26",
//   "KUSDT/YES": "0x876655Fe1aAEC9b7BE2c81e05b4849f7D270Ab9D",
//   "KUSDC/YES": "0xF47c1659836CAF363c6AEBA6E14711b812E20E47",
//   "KKUB/YES": "0xbFB2E78Ba4ab1EEe2812291127aA795729a87d28",
//   "KUSDT/KKUB": "0x286B67516b979a8271805660D3Ac0c626F2D38e6",
// };

// test-net
export const CONTRACT_ADDRESS = {
  WE: "0xD167480156D83244fC34bE561BB83Cc629d90183",
  KUSDT: "0xdbf66ffC570f7dF1e226EED92d8896bfc40EaC19",
  KUSDC: "0xE2d18163441314265b761f2fB833463d8EB42376",
  Multicall: "0x304De20d89914e588890AA172Aa5e33397d0c703",
  AdminProject: "0xfFD1C737f89DA9b25B11248962323B38127aC0b8",
  AdminProjectRouter: "0x217f47cd2E23E48b191A009c4565062989Fee45D",
  AdminKAP20Router: "0xC23e0F6d99f946Bc85f8057ee8C5620bfbB0B74F",
  TransferRouter: "0x5652e9e6E57Db61F185358e2538595003514ACc6",
  Committee: "0x232Cc14bF0c27fc01BDdd84AC2D1A00d31349261",
  KYC: "0x4c9cc3628c00F3Df1F5F1f3B86d80992Ec29F2F1",
  CallHelper: "0x2eb9369683AF0A9bA3BE7a7177c56Da614dac227",
  SwapRouter: "0x93185406138Cf62294A18Fb2B553464E65962a2C",
  SwapFactory: "0x8B7345878E2a6fEe96C973E7E7D7A376E41951d4",
  KKUB: "0x1de8A5c87d421f53eE4ae398cc766e62E88e9518",
  FinBrokerNext: "0x2B16c23c7108A02d6c9f9bb636ebDfe96a904fbB",
};

export const CONTRACT_NAMES = Object.entries(CONTRACT_ADDRESS).reduce<
  Record<string, string>
>((prev, cur) => {
  const [name, address]: any = cur;
  prev[address] = name;
  return prev;
}, {});

export const ADDRESS_LIST: Record<string, string> = {
  ...CONTRACT_ADDRESS,
  ...Object.values(CONTRACT_ADDRESS).reduce<Record<string, string>>(
    (prev, cur: any) => {
      prev[cur] = cur;
      return prev;
    },
    {}
  ),
};
