/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  BaseContract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import type { TypedEventFilter, TypedEvent, TypedListener } from "./common";

interface TestKYCBitkubChainV2Interface extends ethers.utils.Interface {
  functions: {
    "admin()": FunctionFragment;
    "batchSetKycCompleted(address[],uint256)": FunctionFragment;
    "batchSetKycRevoked(address[])": FunctionFragment;
    "isAddressKyc(address)": FunctionFragment;
    "kycAddresses(uint256)": FunctionFragment;
    "kycAddressesLength()": FunctionFragment;
    "kycLevelToTitle(uint256)": FunctionFragment;
    "kycTitleToLevel(string)": FunctionFragment;
    "kycsLevel(address)": FunctionFragment;
    "kycsProjectLevel(string,string)": FunctionFragment;
    "setAdmin(address)": FunctionFragment;
    "setKycCompleted(address,uint256)": FunctionFragment;
    "setKycProjectLevel(string,string,uint256)": FunctionFragment;
    "setKycRevoked(address)": FunctionFragment;
    "setKycTitle(string,uint256)": FunctionFragment;
    "version()": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "admin", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "batchSetKycCompleted",
    values: [string[], BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "batchSetKycRevoked",
    values: [string[]]
  ): string;
  encodeFunctionData(
    functionFragment: "isAddressKyc",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "kycAddresses",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "kycAddressesLength",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "kycLevelToTitle",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "kycTitleToLevel",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "kycsLevel", values: [string]): string;
  encodeFunctionData(
    functionFragment: "kycsProjectLevel",
    values: [string, string]
  ): string;
  encodeFunctionData(functionFragment: "setAdmin", values: [string]): string;
  encodeFunctionData(
    functionFragment: "setKycCompleted",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setKycProjectLevel",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setKycRevoked",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setKycTitle",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "version", values?: undefined): string;

  decodeFunctionResult(functionFragment: "admin", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "batchSetKycCompleted",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "batchSetKycRevoked",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isAddressKyc",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "kycAddresses",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "kycAddressesLength",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "kycLevelToTitle",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "kycTitleToLevel",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "kycsLevel", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "kycsProjectLevel",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setAdmin", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setKycCompleted",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setKycProjectLevel",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setKycRevoked",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setKycTitle",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "version", data: BytesLike): Result;

  events: {
    "KycCompleted(address,address,uint256,uint256)": EventFragment;
    "KycProject(address,string,string,uint256)": EventFragment;
    "KycRevoked(address,address,uint256,uint256)": EventFragment;
    "KycTitle(address,string,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "KycCompleted"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "KycProject"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "KycRevoked"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "KycTitle"): EventFragment;
}

export type KycCompletedEvent = TypedEvent<
  [string, string, BigNumber, BigNumber] & {
    addr: string;
    caller: string;
    previousLevel: BigNumber;
    level: BigNumber;
  }
>;

export type KycProjectEvent = TypedEvent<
  [string, string, string, BigNumber] & {
    _caller: string;
    projectName: string;
    functionName: string;
    level: BigNumber;
  }
>;

export type KycRevokedEvent = TypedEvent<
  [string, string, BigNumber, BigNumber] & {
    addr: string;
    caller: string;
    previousLevel: BigNumber;
    level: BigNumber;
  }
>;

export type KycTitleEvent = TypedEvent<
  [string, string, BigNumber] & {
    _caller: string;
    title: string;
    level: BigNumber;
  }
>;

export class TestKYCBitkubChainV2 extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: TestKYCBitkubChainV2Interface;

  functions: {
    admin(overrides?: CallOverrides): Promise<[string]>;

    batchSetKycCompleted(
      _addrs: string[],
      level: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    batchSetKycRevoked(
      _addrs: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    isAddressKyc(arg0: string, overrides?: CallOverrides): Promise<[boolean]>;

    kycAddresses(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    kycAddressesLength(overrides?: CallOverrides): Promise<[BigNumber]>;

    kycLevelToTitle(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    kycTitleToLevel(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    kycsLevel(arg0: string, overrides?: CallOverrides): Promise<[BigNumber]>;

    kycsProjectLevel(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    setAdmin(
      _admin: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setKycCompleted(
      _addr: string,
      _level: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setKycProjectLevel(
      _projectName: string,
      _functionName: string,
      kycsLevel_: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setKycRevoked(
      _addr: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setKycTitle(
      _title: string,
      _level: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    version(overrides?: CallOverrides): Promise<[BigNumber]>;
  };

  admin(overrides?: CallOverrides): Promise<string>;

  batchSetKycCompleted(
    _addrs: string[],
    level: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  batchSetKycRevoked(
    _addrs: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  isAddressKyc(arg0: string, overrides?: CallOverrides): Promise<boolean>;

  kycAddresses(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>;

  kycAddressesLength(overrides?: CallOverrides): Promise<BigNumber>;

  kycLevelToTitle(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  kycTitleToLevel(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

  kycsLevel(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

  kycsProjectLevel(
    arg0: string,
    arg1: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  setAdmin(
    _admin: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setKycCompleted(
    _addr: string,
    _level: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setKycProjectLevel(
    _projectName: string,
    _functionName: string,
    kycsLevel_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setKycRevoked(
    _addr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setKycTitle(
    _title: string,
    _level: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  version(overrides?: CallOverrides): Promise<BigNumber>;

  callStatic: {
    admin(overrides?: CallOverrides): Promise<string>;

    batchSetKycCompleted(
      _addrs: string[],
      level: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    batchSetKycRevoked(
      _addrs: string[],
      overrides?: CallOverrides
    ): Promise<void>;

    isAddressKyc(arg0: string, overrides?: CallOverrides): Promise<boolean>;

    kycAddresses(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    kycAddressesLength(overrides?: CallOverrides): Promise<BigNumber>;

    kycLevelToTitle(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    kycTitleToLevel(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    kycsLevel(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    kycsProjectLevel(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setAdmin(_admin: string, overrides?: CallOverrides): Promise<void>;

    setKycCompleted(
      _addr: string,
      _level: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setKycProjectLevel(
      _projectName: string,
      _functionName: string,
      kycsLevel_: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setKycRevoked(_addr: string, overrides?: CallOverrides): Promise<void>;

    setKycTitle(
      _title: string,
      _level: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    version(overrides?: CallOverrides): Promise<BigNumber>;
  };

  filters: {
    "KycCompleted(address,address,uint256,uint256)"(
      addr?: string | null,
      caller?: string | null,
      previousLevel?: null,
      level?: null
    ): TypedEventFilter<
      [string, string, BigNumber, BigNumber],
      {
        addr: string;
        caller: string;
        previousLevel: BigNumber;
        level: BigNumber;
      }
    >;

    KycCompleted(
      addr?: string | null,
      caller?: string | null,
      previousLevel?: null,
      level?: null
    ): TypedEventFilter<
      [string, string, BigNumber, BigNumber],
      {
        addr: string;
        caller: string;
        previousLevel: BigNumber;
        level: BigNumber;
      }
    >;

    "KycProject(address,string,string,uint256)"(
      _caller?: string | null,
      projectName?: null,
      functionName?: null,
      level?: null
    ): TypedEventFilter<
      [string, string, string, BigNumber],
      {
        _caller: string;
        projectName: string;
        functionName: string;
        level: BigNumber;
      }
    >;

    KycProject(
      _caller?: string | null,
      projectName?: null,
      functionName?: null,
      level?: null
    ): TypedEventFilter<
      [string, string, string, BigNumber],
      {
        _caller: string;
        projectName: string;
        functionName: string;
        level: BigNumber;
      }
    >;

    "KycRevoked(address,address,uint256,uint256)"(
      addr?: string | null,
      caller?: string | null,
      previousLevel?: null,
      level?: null
    ): TypedEventFilter<
      [string, string, BigNumber, BigNumber],
      {
        addr: string;
        caller: string;
        previousLevel: BigNumber;
        level: BigNumber;
      }
    >;

    KycRevoked(
      addr?: string | null,
      caller?: string | null,
      previousLevel?: null,
      level?: null
    ): TypedEventFilter<
      [string, string, BigNumber, BigNumber],
      {
        addr: string;
        caller: string;
        previousLevel: BigNumber;
        level: BigNumber;
      }
    >;

    "KycTitle(address,string,uint256)"(
      _caller?: string | null,
      title?: null,
      level?: null
    ): TypedEventFilter<
      [string, string, BigNumber],
      { _caller: string; title: string; level: BigNumber }
    >;

    KycTitle(
      _caller?: string | null,
      title?: null,
      level?: null
    ): TypedEventFilter<
      [string, string, BigNumber],
      { _caller: string; title: string; level: BigNumber }
    >;
  };

  estimateGas: {
    admin(overrides?: CallOverrides): Promise<BigNumber>;

    batchSetKycCompleted(
      _addrs: string[],
      level: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    batchSetKycRevoked(
      _addrs: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    isAddressKyc(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    kycAddresses(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    kycAddressesLength(overrides?: CallOverrides): Promise<BigNumber>;

    kycLevelToTitle(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    kycTitleToLevel(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    kycsLevel(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    kycsProjectLevel(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setAdmin(
      _admin: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setKycCompleted(
      _addr: string,
      _level: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setKycProjectLevel(
      _projectName: string,
      _functionName: string,
      kycsLevel_: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setKycRevoked(
      _addr: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setKycTitle(
      _title: string,
      _level: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    version(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    admin(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    batchSetKycCompleted(
      _addrs: string[],
      level: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    batchSetKycRevoked(
      _addrs: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    isAddressKyc(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    kycAddresses(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    kycAddressesLength(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    kycLevelToTitle(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    kycTitleToLevel(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    kycsLevel(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    kycsProjectLevel(
      arg0: string,
      arg1: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setAdmin(
      _admin: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setKycCompleted(
      _addr: string,
      _level: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setKycProjectLevel(
      _projectName: string,
      _functionName: string,
      kycsLevel_: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setKycRevoked(
      _addr: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setKycTitle(
      _title: string,
      _level: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    version(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
