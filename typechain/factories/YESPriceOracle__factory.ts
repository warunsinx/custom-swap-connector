/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  YESPriceOracle,
  YESPriceOracleInterface,
} from "../YESPriceOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "swapOracle_",
        type: "address",
      },
      {
        internalType: "address",
        name: "yesToken_",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "stableCoins_",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "stableCoin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "StableCoinAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "stableCoin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "StableCoinRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getLatestPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getYESPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isPriceOracle",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stableCoins",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "swapOracle",
    outputs: [
      {
        internalType: "contract IUniswapV2Oracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "yesToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516107ff3803806107ff83398101604081905261002f91610101565b600080546001600160a01b038086166001600160a01b031992831617835560018054918616919092161790555b81518110156100c6576002828281518110610079576100796101e9565b60209081029190910181015182546001810184556000938452919092200180546001600160a01b0319166001600160a01b03909216919091179055806100be816101ff565b91505061005c565b50505050610228565b80516001600160a01b03811681146100e657600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561011657600080fd5b61011f846100cf565b9250602061012e8186016100cf565b60408601519093506001600160401b038082111561014b57600080fd5b818701915087601f83011261015f57600080fd5b815181811115610171576101716100eb565b8060051b604051601f19603f83011681018181108582111715610196576101966100eb565b60405291825284820192508381018501918a8311156101b457600080fd5b938501935b828510156101d9576101ca856100cf565b845293850193928501926101b9565b8096505050505050509250925092565b634e487b7160e01b600052603260045260246000fd5b600060001982141561022157634e487b7160e01b600052601160045260246000fd5b5060010190565b6105c8806102376000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630775d9421461006757806316345f181461009757806348455cfe146100b857806366331bba146100cb5780639cbb9590146100e3578063f0d9bb20146100eb575b600080fd5b60005461007a906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100aa6100a536600461046d565b6100fe565b60405190815260200161008e565b61007a6100c6366004610496565b61018b565b6100d3600181565b604051901515815260200161008e565b6100aa6101b5565b60015461007a906001600160a01b031681565b60008054600154604051632321bc7960e21b81526001600160a01b038581166004830152670de0b6b3a764000060248301529182166044820152911690638c86f1e490606401602060405180830381865afa158015610161573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061018591906104af565b92915050565b6002818154811061019b57600080fd5b6000918252602090912001546001600160a01b0316905081565b600254600090819067ffffffffffffffff8111156101d5576101d56104c8565b6040519080825280602002602001820160405280156101fe578160200160208202803683370190505b50905060005b60025481101561026d5761023e60028281548110610224576102246104de565b6000918252602090912001546001600160a01b03166100fe565b828281518110610250576102506104de565b6020908102919091010152806102658161050a565b915050610204565b50805161027b908290610281565b91505090565b600061028f8360008461033a565b61029a60028361053b565b156102c857826102ab60028461054f565b815181106102bb576102bb6104de565b6020026020010151610333565b6002836102d5828561054f565b815181106102e5576102e56104de565b60200260200101518460016002866102fd919061054f565b6103079190610563565b81518110610317576103176104de565b6020026020010151610329919061057a565b610333919061054f565b9392505050565b808210156103f5576000829050600084828151811061035b5761035b6104de565b602002602001015190506000846001610374919061057a565b90505b838110156103c65781868281518110610392576103926104de565b602002602001015110156103b6576103b686826103ae8661050a565b9550856103fa565b6103bf8161050a565b9050610377565b506103d28585846103fa565b6103dd85858461033a565b6103f2856103ec84600161057a565b8561033a565b50505b505050565b82818151811061040c5761040c6104de565b6020026020010151838381518110610426576104266104de565b6020026020010151848481518110610440576104406104de565b60200260200101858481518110610459576104596104de565b602090810291909101019190915252505050565b60006020828403121561047f57600080fd5b81356001600160a01b038116811461033357600080fd5b6000602082840312156104a857600080fd5b5035919050565b6000602082840312156104c157600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060001982141561051e5761051e6104f4565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261054a5761054a610525565b500690565b60008261055e5761055e610525565b500490565b600082821015610575576105756104f4565b500390565b6000821982111561058d5761058d6104f4565b50019056fea264697066735822122059229c7f5dce40c9d8d380437172789b7d252d851fd3be9fac5508c9ad0d99f764736f6c634300080b0033";

export class YESPriceOracle__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    swapOracle_: string,
    yesToken_: string,
    stableCoins_: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<YESPriceOracle> {
    return super.deploy(
      swapOracle_,
      yesToken_,
      stableCoins_,
      overrides || {}
    ) as Promise<YESPriceOracle>;
  }
  getDeployTransaction(
    swapOracle_: string,
    yesToken_: string,
    stableCoins_: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      swapOracle_,
      yesToken_,
      stableCoins_,
      overrides || {}
    );
  }
  attach(address: string): YESPriceOracle {
    return super.attach(address) as YESPriceOracle;
  }
  connect(signer: Signer): YESPriceOracle__factory {
    return super.connect(signer) as YESPriceOracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YESPriceOracleInterface {
    return new utils.Interface(_abi) as YESPriceOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): YESPriceOracle {
    return new Contract(address, _abi, signerOrProvider) as YESPriceOracle;
  }
}
