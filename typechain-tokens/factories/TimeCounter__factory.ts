/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TimeCounter, TimeCounterInterface } from "../TimeCounter";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "counter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "right",
        type: "uint256",
      },
    ],
    name: "CounterRightChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "actor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "LastActionStamped",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "counter",
        type: "address",
      },
    ],
    name: "_grantPermission",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "counter",
        type: "address",
      },
    ],
    name: "_revokePermission",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "counterRights",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "actor",
        type: "address",
      },
    ],
    name: "getElapsedTimeOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastActions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "actor",
        type: "address",
      },
    ],
    name: "stampLastAction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003960201b60201c565b61004160201b60201c565b42600181905550610105565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610be3806101146000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b1461015b5780639abbcf6914610179578063c01af84d14610195578063d015a84f146101b1578063f2fde38b146101cd5761009e565b806304856d37146100a35780633f504e0e146100d3578063715018a61461010357806378e979251461010d57806381d441441461012b575b600080fd5b6100bd60048036038101906100b8919061081c565b6101e9565b6040516100ca91906109e0565b60405180910390f35b6100ed60048036038101906100e8919061081c565b610201565b6040516100fa91906109e0565b60405180910390f35b61010b610276565b005b6101156102fe565b60405161012291906109e0565b60405180910390f35b6101456004803603810190610140919061081c565b610304565b60405161015291906109e0565b60405180910390f35b61016361031c565b60405161017091906108ea565b60405180910390f35b610193600480360381019061018e919061081c565b610345565b005b6101af60048036038101906101aa919061081c565b610443565b005b6101cb60048036038101906101c6919061081c565b610541565b005b6101e760048036038101906101e2919061081c565b610643565b005b60036020528060005260406000206000915090505481565b600080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811461025f57804261025a9190610a0c565b61026e565b6001544261026d9190610a0c565b5b915050919050565b61027e61073b565b73ffffffffffffffffffffffffffffffffffffffff1661029c61031c565b73ffffffffffffffffffffffffffffffffffffffff16146102f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e9906109c0565b60405180910390fd5b6102fc6000610743565b565b60015481565b60026020528060005260406000206000915090505481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61034d61073b565b73ffffffffffffffffffffffffffffffffffffffff1661036b61031c565b73ffffffffffffffffffffffffffffffffffffffff16146103c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b8906109c0565b60405180910390fd5b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f304c868fe15ab40274a46bf851f55f80afa5e7cae7b5e6f66a506dbb86ed1dba81600160405161043892919061092e565b60405180910390a150565b61044b61073b565b73ffffffffffffffffffffffffffffffffffffffff1661046961031c565b73ffffffffffffffffffffffffffffffffffffffff16146104bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b6906109c0565b60405180910390fd5b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f304c868fe15ab40274a46bf851f55f80afa5e7cae7b5e6f66a506dbb86ed1dba816000604051610536929190610905565b60405180910390a150565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116105c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ba90610980565b60405180910390fd5b42600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507fa743940d056304bebca9eae8ac4a85a2106cfe81adb09e8d69b12da8ef77e0228142604051610638929190610957565b60405180910390a150565b61064b61073b565b73ffffffffffffffffffffffffffffffffffffffff1661066961031c565b73ffffffffffffffffffffffffffffffffffffffff16146106bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b6906109c0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561072f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610726906109a0565b60405180910390fd5b61073881610743565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008135905061081681610b96565b92915050565b60006020828403121561082e57600080fd5b600061083c84828501610807565b91505092915050565b61084e81610a40565b82525050565b61085d81610a7c565b82525050565b61086c81610a8e565b82525050565b600061087f6025836109fb565b915061088a82610acf565b604082019050919050565b60006108a26026836109fb565b91506108ad82610b1e565b604082019050919050565b60006108c56020836109fb565b91506108d082610b6d565b602082019050919050565b6108e481610a72565b82525050565b60006020820190506108ff6000830184610845565b92915050565b600060408201905061091a6000830185610845565b6109276020830184610854565b9392505050565b60006040820190506109436000830185610845565b6109506020830184610863565b9392505050565b600060408201905061096c6000830185610845565b61097960208301846108db565b9392505050565b6000602082019050818103600083015261099981610872565b9050919050565b600060208201905081810360008301526109b981610895565b9050919050565b600060208201905081810360008301526109d9816108b8565b9050919050565b60006020820190506109f560008301846108db565b92915050565b600082825260208201905092915050565b6000610a1782610a72565b9150610a2283610a72565b925082821015610a3557610a34610aa0565b5b828203905092915050565b6000610a4b82610a52565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610a8782610a72565b9050919050565b6000610a9982610a72565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f54696d65436f756e7465723a206e6f20726967687420746f207374616d70206160008201527f6374696f6e000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b610b9f81610a40565b8114610baa57600080fd5b5056fea2646970667358221220efb9eb8141eebb4e348ffea6f175e9d3c1b6512eea96ab4268919afea91ef2b764736f6c63430008040033";

export class TimeCounter__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TimeCounter> {
    return super.deploy(overrides || {}) as Promise<TimeCounter>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TimeCounter {
    return super.attach(address) as TimeCounter;
  }
  connect(signer: Signer): TimeCounter__factory {
    return super.connect(signer) as TimeCounter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TimeCounterInterface {
    return new utils.Interface(_abi) as TimeCounterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TimeCounter {
    return new Contract(address, _abi, signerOrProvider) as TimeCounter;
  }
}
